<prog>::=programa id; [<declarações>] início <lista comandos> fim.
<declarações>::=var id {,id} : <tipo>; {id {,id} : <tipo>;}
<tipo>::=inteiro | lógico
<lista comandos>::=<comando> ; {<comando>;}
<comando>::=<atribuição> | <leitura> | <escrita> | <composto> | <condicional> | <repetição>
<atribuição>::=id := <expr>
<leitura>::=ler (id {,id}) | ler [(id {,id})]

<escrita>::=escrever (<stringvar> {,<stringvar>}) | escrever [(<stringvar> {,<stringvar>})]
<composto>::=início <lista comandos> fim
<condicional>::=se <exprLogico> então <comando> [Senão <comando>]
<repetição>::=enquanto <exprLogico> faça <comando>
<expr>::=<expr> + <expr> | <expr> - <expr> | <expr> * <expr> | <expr> / <expr> | - <expr> |
(<expr>) | id | num
<exprLogico>::=<expr> < <expr> | <expr> <= <expr> | <expr> > <expr> | <expr> >= <expr>
| <expr> = <expr> | <expr> <> <expr> | id
<stringvar>::=str | <expr>