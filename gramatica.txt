<prog>::=programa id; [<declarações>] <bloco> .
<declarações>::=var id {,id} : <tipo>; {id {,id} : <tipo>;}
<bloco>::= início <lista comandos> fim
<tipo>::=inteiro | lógico
<lista comandos>::=<comando>; {<comando>;}
<comando>::=<atribuição> | <leitura> | <escrita> | <bloco> | <condicional> | <repetição>
<atribuição>::=id := <expr>
<leitura>::=ler (id {,id})
<escrita>::=escrever (<stringvar> {,<stringvar>})
<condicional>::=se <exprLogico> então <comando> [senão <comando>]
<repetição>::=enquanto <exprLogico> faça <comando>
<expr> ::= <termo> <expr2>
<expr2> ::= + <termo> <expr2> | - <termo> <expr2> | ε
<termo> ::= <fator> <termo2>
<termo2> ::= * <fator> <termo2> | / <fator> <termo2> | ε
<fator> ::= (<expr>) | - <fator> | id | num
<exprLogico>::= <expr> <opLogico> <expr> | id
<opLogico> ::= < | <= | > | >= | = | <>
<stringvar>::=str | <expr>